# -*- coding: utf-8 -*-
"""Exp-3 DataMining

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xSLG6Eh6Eh9PQKZRAynNtA-1KN1NX2-L

# **Data Collection **
Bad Data= Irrelevant Data, Biased Data, Missing Values, Imbalanced Data(SMOTE to correct it).............These are also Data Mining Challenges
Techniques of Data Collection: Repository, WebScraping, Collect data by yourself

We can trim outlier by detecting it or do Capping(Replace with Boundary Value)
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv("/content/Salary.csv")

s=df['Salary']

s

s.shape

s.describe()

UpperBoundary=df['Salary'].mean() + 3*df['Salary'].std()

UpperBoundary

LowerBoundary=df['Salary'].mean() - 3*df['Salary'].std()

LowerBoundary

Outlier=df[(df['Salary']>UpperBoundary) | (df['Salary']<LowerBoundary)]

Outlier

plt.figure(figsize=(16,5))
plt.subplot(1,2,1)
sns.distplot(df['Salary'])
plt.show()

Trimmed=df[(df['Salary']<UpperBoundary) & (df['Salary']>LowerBoundary)]

Trimmed

Trimmed.shape

df['ZScore'] = (df['Salary'] - df['Salary'].mean() ) / df['Salary'].std()

df['ZScore']

trimmed=df[(df['ZScore']<3) & (df['ZScore']>-3)]

trimmed

df['Salary']=np.where(df['Salary']>UpperBoundary,UpperBoundary,np.where(df['Salary']<LowerBoundary,LowerBoundary,df['Salary']))

df['Salary']

df['Salary'].shape

